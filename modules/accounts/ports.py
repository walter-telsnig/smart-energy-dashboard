# DIP: Use-cases depend on ports (interfaces), not concrete repos/SQLAlchemy.

from typing import Protocol, Iterable, Optional
from .dto import CreateUserDTO
from .domain import User

class UserRepositoryPort(Protocol):
    def create(self, dto: CreateUserDTO) -> User: ...
    def get(self, user_id: int) -> Optional[User]: ...
    def list(self, limit: int = 100, offset: int = 0) -> Iterable[User]: ...
    def update_name(self, user_id: int, full_name: str) -> Optional[User]: ...
    def delete(self, user_id: int) -> bool: ...
